version: '2'
services:
  redis:
    image: redis:3.0-alpine
    command: redis-server
    volumes:
      - /var/lib/redis/data
    ports:
      - 6379:6379

  postgres:
    restart: always
    image: postgres:10
    volumes:
      - /var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=password
    - POSTGRES_DB=present_easy

  postgres-backup:
    restart: always
    image: debezium/postgres:10
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=password
    - POSTGRES_DB=present_easy
    command: postgres -c config_file=/home/config/postgresql.conf
    ports:
      - 5532:5532
    volumes:
      - $PWD:/home/config

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata1:/usr/share/elasticsearch/data

  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.1.2
    depends_on:
      - zookeeper
    restart: always
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.2
    hostname: schema-registry
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect:
    image: mtpatter/debezium-connect  # built from debezium/connect:0.10 
    depends_on:
      - zookeeper
      - kafka
      - postgres
    ports:
      - 8083:8083
    environment:
        GROUP_ID: 1
        CONFIG_STORAGE_TOPIC: my-connect-configs
        OFFSET_STORAGE_TOPIC: my-connect-offsets
        ADVERTISED_HOST_NAME: connect
        BOOTSTRAP_SERVERS: kafka:9092
        CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
        CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    ports:
      - "4000:4000"

  app:
    image: present_easy
    restart: always
    build: .
    volumes:
      - ./:/app
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=present_easy
      - HOST=postgres
      - PORT=5432
      - APP_SETTINGS=config.DevelopmentConfig
      - APP_PORT=3000
      - SECRET_KEY=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - KAFKA_HOST=kafka
      - SCHEMA_HOST=schema-registry
      - KAFKA_PORT=9092
      - SCHEMA_PORT=8081
      - APP_PORT=5000
    ports:
      - "5000"
    entrypoint: ["python", "app.py"]

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  esdata3:
    driver: local

networks:
  esnet:
    driver: bridge
